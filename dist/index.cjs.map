{
  "version": 3,
  "sources": ["../src/index.ts", "../src/cn/index.ts", "../src/sha256/index.ts"],
  "sourcesContent": ["export * from './cn';\nexport * from './sha256'", "interface Classname {\n  [key: string]: boolean;\n}\n\n/** \uC5EC\uB7EC \uAC1C\uC758 className\uC744 \uD569\uCE58\uB294 \uD568\uC218 */\nexport function cn(classes: Classname) {\n  return Object.entries(classes)\n    .filter(([, value]) => value)\n    .map(([key]) => key)\n    .join(' ');\n}\n", "export async function sha256(message: string) {\n  // encode as UTF-8\n  const msgBuffer = new TextEncoder().encode(message);\n\n  // hash the message\n  const hashBuffer = await crypto.subtle.digest('SHA-256', msgBuffer);\n\n  // convert ArrayBuffer to Array\n  const hashArray = Array.from(new Uint8Array(hashBuffer));\n\n  // convert bytes to hex string\n  const hashHex = hashArray.map((b) => b.toString(16).padStart(2, '0')).join('');\n  return hashHex;\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACKO,SAAS,GAAG,SAAoB;AACrC,SAAO,OAAO,QAAQ,OAAO,EAC1B,OAAO,CAAC,CAAC,EAAE,KAAK,MAAM,KAAK,EAC3B,IAAI,CAAC,CAAC,GAAG,MAAM,GAAG,EAClB,KAAK,GAAG;AACb;;;ACVA,eAAsB,OAAO,SAAiB;AAE5C,QAAM,YAAY,IAAI,YAAY,EAAE,OAAO,OAAO;AAGlD,QAAM,aAAa,MAAM,OAAO,OAAO,OAAO,WAAW,SAAS;AAGlE,QAAM,YAAY,MAAM,KAAK,IAAI,WAAW,UAAU,CAAC;AAGvD,QAAM,UAAU,UAAU,IAAI,CAAC,MAAM,EAAE,SAAS,EAAE,EAAE,SAAS,GAAG,GAAG,CAAC,EAAE,KAAK,EAAE;AAC7E,SAAO;AACT;",
  "names": []
}
